# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import sys
import os
BASE_PATH = os.environ.get('BASE_PATH')
sys.path.insert(1, BASE_PATH + '/telegram-bots/src')

import libraries.protobuf.filehandler.fileHandler_pb2 as fileHandler__pb2



class FileHandlerAkkaServiceStub(object):
  """The file handler service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.UploadFile = channel.unary_unary(
        '/FileHandlerAkkaService/UploadFile',
        request_serializer=fileHandler__pb2.FileUploadRequest.SerializeToString,
        response_deserializer=fileHandler__pb2.FileUploadResponse.FromString,
        )
    self.DeleteFile = channel.unary_unary(
        '/FileHandlerAkkaService/DeleteFile',
        request_serializer=fileHandler__pb2.FileDeleteRequest.SerializeToString,
        response_deserializer=fileHandler__pb2.FileDeleteResponse.FromString,
        )
    self.GetFile = channel.unary_unary(
        '/FileHandlerAkkaService/GetFile',
        request_serializer=fileHandler__pb2.FileGetRequest.SerializeToString,
        response_deserializer=fileHandler__pb2.FileGetResponse.FromString,
        )
    self.Greet = channel.unary_unary(
        '/FileHandlerAkkaService/Greet',
        request_serializer=fileHandler__pb2.SayHelloMessage.SerializeToString,
        response_deserializer=fileHandler__pb2.SayHelloMessage.FromString,
        )


class FileHandlerAkkaServiceServicer(object):
  """The file handler service definition.
  """

  def UploadFile(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetFile(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Greet(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FileHandlerAkkaServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'UploadFile': grpc.unary_unary_rpc_method_handler(
          servicer.UploadFile,
          request_deserializer=fileHandler__pb2.FileUploadRequest.FromString,
          response_serializer=fileHandler__pb2.FileUploadResponse.SerializeToString,
      ),
      'DeleteFile': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteFile,
          request_deserializer=fileHandler__pb2.FileDeleteRequest.FromString,
          response_serializer=fileHandler__pb2.FileDeleteResponse.SerializeToString,
      ),
      'GetFile': grpc.unary_unary_rpc_method_handler(
          servicer.GetFile,
          request_deserializer=fileHandler__pb2.FileGetRequest.FromString,
          response_serializer=fileHandler__pb2.FileGetResponse.SerializeToString,
      ),
      'Greet': grpc.unary_unary_rpc_method_handler(
          servicer.Greet,
          request_deserializer=fileHandler__pb2.SayHelloMessage.FromString,
          response_serializer=fileHandler__pb2.SayHelloMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'FileHandlerAkkaService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
