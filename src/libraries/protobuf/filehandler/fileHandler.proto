//#service-request-reply
syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.chartsbot.services";
option java_outer_classname = "FileHandlerProto";

// The file handler service definition.
service FileHandlerAkkaService {
  // Sends a greeting
  rpc UploadFile (FileUploadRequest) returns (FileUploadResponse) {}

  rpc DeleteFile (FileDeleteRequest) returns (FileDeleteResponse) {}

  rpc GetFile (FileGetRequest) returns (FileGetResponse) {}

  rpc Greet (SayHelloMessage) returns (SayHelloMessage) {}
  //#service-request-reply
  //#service-stream
  // The stream of incoming HelloRequest messages are
  // sent out as corresponding HelloReply. From
  // all clients to all clients, like a chat room.
  // rpc SayHelloToAll (stream FileUploadRequest) returns (stream FileUploadResponse) {}
  //#service-stream
  //#service-request-reply
}

// The request message containing the file to upload info.
message FileUploadRequest {
  int64 chatId = 1;
  string chatTitle = 2;
  string fileClassification = 3;  // meme or doc
  string fileType = 4;  // video, image, ...
  string author = 5;
  uint32 timeCreation = 6;
  bytes file = 7;
}

// The response message containing the greetings
message FileUploadResponse {
  bool status = 1;
  string message = 2;
}
//#service-request-reply

message SayHelloMessage {
  string message = 1;
}

message FileGetRequest {
  int64 chatId = 1;
  string fileClassification = 2;
  string fileType = 3;
  string author = 5;
}

message FileGetResponse {
  bool status = 1;
  string fileType = 4;  // video, image, ...
  string author = 5;
  uint32 timeCreation = 6;
  string name = 7;
  bytes file = 8;
}


message FileDeleteRequest {
  int64 chatId = 1;
  string fileClassification = 3;  // meme or doc
  string fileType = 4;  // video, image, ...
  string name = 5;
}

message FileDeleteResponse {
  bool status = 1;
  string message = 2;
}